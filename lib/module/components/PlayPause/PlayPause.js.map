{"version":3,"sources":["PlayPause.tsx"],"names":["React","createRef","Image","Platform","Control","NullControl","styles","playPauseRef","play","require","pause","rewind","forward","PlayPause","animations","AnimatedView","disablePlayPause","disableSeekButtons","paused","togglePlayPause","resetControlTimeout","showControls","onPressForward","onPressRewind","source","animatedStyles","zIndex","container","controlsOpacity","playContainer","isTV","hasTVPreferredFocus"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAeC,QAAf,QAAkD,cAAlD;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AAEA,SAAQC,MAAR,QAAqB,UAArB;AAEA,OAAO,MAAMC,YAAY,gBAAGN,SAAS,EAA9B;;AAcP,MAAMO,IAAI,GAAGC,OAAO,CAAC,2BAAD,CAApB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,4BAAD,CAArB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,6BAAD,CAAtB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,8BAAD,CAAvB;;AAEA,OAAO,MAAMI,SAAS,GAAG,QAUH;AAAA,MAVI;AACxBC,IAAAA,UAAU,EAAE;AAACC,MAAAA,YAAD;AAAe,SAAGD;AAAlB,KADY;AAExBE,IAAAA,gBAFwB;AAGxBC,IAAAA,kBAHwB;AAIxBC,IAAAA,MAJwB;AAKxBC,IAAAA,eALwB;AAMxBC,IAAAA,mBANwB;AAOxBC,IAAAA,YAPwB;AAQxBC,IAAAA,cARwB;AASxBC,IAAAA;AATwB,GAUJ;AACpB,MAAIC,MAAM,GAAGN,MAAM,GAAGV,IAAH,GAAUE,KAA7B;AAEA,QAAMe,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAEL,YAAY,GAAG,KAAH,GAAW;AADV,GAAvB;;AAIA,MAAIL,gBAAJ,EAAsB;AACpB,wBAAO,oBAAC,WAAD,OAAP;AACD;;AAED,sBACE,oBAAC,YAAD;AACE,IAAA,aAAa,EAAE,UADjB;AAEE,IAAA,KAAK,EAAE,CAACV,MAAM,CAACqB,SAAR,EAAmBF,cAAnB,EAAmCX,UAAU,CAACc,eAA9C;AAFT,KAGG,CAACX,kBAAD,gBACC,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAE,CAACI,YADb;AAEE,IAAA,QAAQ,EAAEE,aAFZ;AAGE,IAAA,mBAAmB,EAAEH;AAHvB,kBAIE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAET,MAAf;AAAuB,IAAA,UAAU,EAAE,SAAnC;AAA8C,IAAA,KAAK,EAAEL,MAAM,CAACK;AAA5D,IAJF,CADD,GAOG,IAVN,eAWE,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAE,CAACU,YADb;AAEE,IAAA,QAAQ,EAAEF,eAFZ;AAGE,IAAA,mBAAmB,EAAEC,mBAHvB;AAIE,IAAA,KAAK,EAAEd,MAAM,CAACuB,aAJhB;AAKE,IAAA,UAAU,EAAEtB;AALd,KAMOJ,QAAQ,CAAC2B,IAAT,GAAgB;AAACC,IAAAA,mBAAmB,EAAEV;AAAtB,GAAhB,GAAsD,EAN7D,gBAOE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEG,MAAf;AAAuB,IAAA,UAAU,EAAE,SAAnC;AAA8C,IAAA,KAAK,EAAElB,MAAM,CAACE;AAA5D,IAPF,CAXF,EAoBG,CAACS,kBAAD,gBACC,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAE,CAACI,YADb;AAEE,IAAA,QAAQ,EAAEC,cAFZ;AAGE,IAAA,mBAAmB,EAAEF;AAHvB,kBAIE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAER,OADV;AAEE,IAAA,UAAU,EAAE,SAFd;AAGE,IAAA,KAAK,EAAEN,MAAM,CAACK;AAHhB,IAJF,CADD,GAWG,IA/BN,CADF;AAmCD,CAxDM","sourcesContent":["import React, {createRef} from 'react';\nimport {Image, Platform, TouchableHighlight} from 'react-native';\nimport {Control} from '../Control';\nimport {NullControl} from '../NullControl';\nimport type {VideoAnimations} from '../../types';\nimport {styles} from './styles';\n\nexport const playPauseRef = createRef<TouchableHighlight>();\n\ninterface PlayPauseProps {\n  animations: VideoAnimations;\n  disablePlayPause: boolean;\n  disableSeekButtons: boolean;\n  paused: boolean;\n  togglePlayPause: () => void;\n  resetControlTimeout: () => void;\n  showControls: boolean;\n  onPressForward: () => void;\n  onPressRewind: () => void;\n}\n\nconst play = require('../../assets/img/play.png');\nconst pause = require('../../assets/img/pause.png');\nconst rewind = require('../../assets/img/rewind.png');\nconst forward = require('../../assets/img/forward.png');\n\nexport const PlayPause = ({\n  animations: {AnimatedView, ...animations},\n  disablePlayPause,\n  disableSeekButtons,\n  paused,\n  togglePlayPause,\n  resetControlTimeout,\n  showControls,\n  onPressForward,\n  onPressRewind,\n}: PlayPauseProps) => {\n  let source = paused ? play : pause;\n\n  const animatedStyles = {\n    zIndex: showControls ? 99999 : 0,\n  };\n\n  if (disablePlayPause) {\n    return <NullControl />;\n  }\n\n  return (\n    <AnimatedView\n      pointerEvents={'box-none'}\n      style={[styles.container, animatedStyles, animations.controlsOpacity]}>\n      {!disableSeekButtons ? (\n        <Control\n          disabled={!showControls}\n          callback={onPressRewind}\n          resetControlTimeout={resetControlTimeout}>\n          <Image source={rewind} resizeMode={'contain'} style={styles.rewind} />\n        </Control>\n      ) : null}\n      <Control\n        disabled={!showControls}\n        callback={togglePlayPause}\n        resetControlTimeout={resetControlTimeout}\n        style={styles.playContainer}\n        controlRef={playPauseRef}\n        {...(Platform.isTV ? {hasTVPreferredFocus: showControls} : {})}>\n        <Image source={source} resizeMode={'contain'} style={styles.play} />\n      </Control>\n      {!disableSeekButtons ? (\n        <Control\n          disabled={!showControls}\n          callback={onPressForward}\n          resetControlTimeout={resetControlTimeout}>\n          <Image\n            source={forward}\n            resizeMode={'contain'}\n            style={styles.rewind}\n          />\n        </Control>\n      ) : null}\n    </AnimatedView>\n  );\n};\n"]}