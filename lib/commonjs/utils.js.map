{"version":3,"sources":["utils.ts"],"names":["_onBack","navigator","pop","console","warn","calculateTime","args","time","currentTime","duration","showTimeRemaining","showDuration","formattedDuration","formatTime","showHours","symbol","Math","min","max","formattedMinutes","floor","toFixed","padStart","formattedSeconds","formattedHours"],"mappings":";;;;;;;AAAA;AAEO,MAAMA,OAAO,GAAIC,SAAD,IAAoB;AACzC,MAAIA,SAAS,IAAIA,SAAS,CAACC,GAA3B,EAAgC;AAC9B,WAAO,MAAMD,SAAS,CAACC,GAAV,EAAb;AACD;;AACD,SAAO,MACLC,OAAO,CAACC,IAAR,CACE,kHADF,CADF;AAID,CARM;;;;AAUA,MAAMC,aAAa,GAAIC,IAAD,IAAsB;AACjD,QAAM;AACJC,IAAAA,IAAI,EAAEC,WAAW,GAAG,CADhB;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,iBAHI;AAIJC,IAAAA;AAJI,MAKFL,IALJ;AAOA,QAAMM,iBAAiB,GAAG,CAACD,YAAD,GACtB,EADsB,GAErB,IAAGE,UAAU,CAAC,EACb,GAAGP,IADU;AAEbC,IAAAA,IAAI,EAAEE,QAFO;AAGbC,IAAAA,iBAAiB,EAAE;AAHN,GAAD,CAIX,EANP;;AAQA,MAAIA,iBAAJ,EAAuB;AACrB,UAAMH,IAAI,GAAGE,QAAQ,GAAGD,WAAxB;AACA,WAAQ,GAAEK,UAAU,CAAC,EAAC,GAAGP,IAAJ;AAAUC,MAAAA;AAAV,KAAD,CAAkB,GAAEK,iBAAkB,EAA1D;AACD;;AAED,SAAQ,GAAEC,UAAU,CAAC,EAAC,GAAGP,IAAJ;AAAUC,IAAAA,IAAI,EAAEC;AAAhB,GAAD,CAA+B,GAAEI,iBAAkB,EAAvE;AACD,CAtBM;;;;AAgCP,MAAMC,UAAU,GAAG,QAKD;AAAA,MALE;AAClBN,IAAAA,IAAI,GAAG,CADW;AAElBE,IAAAA,QAFkB;AAGlBC,IAAAA,iBAHkB;AAIlBI,IAAAA;AAJkB,GAKF;AAChB,QAAMC,MAAM,GAAGL,iBAAiB,GAAG,GAAH,GAAS,EAAzC;AACAH,EAAAA,IAAI,GAAGS,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASX,IAAT,EAAe,CAAf,CAAT,EAA4BE,QAA5B,CAAP;;AAEA,MAAI,CAACK,SAAL,EAAgB;AACd,UAAMK,gBAAgB,GAAGH,IAAI,CAACI,KAAL,CAAWb,IAAI,GAAG,EAAlB,EACtBc,OADsB,CACd,CADc,EAEtBC,QAFsB,CAEb,CAFa,EAEV,GAFU,CAAzB;AAGA,UAAMC,gBAAgB,GAAGP,IAAI,CAACI,KAAL,CAAWb,IAAI,GAAG,EAAlB,EACtBc,OADsB,CACd,CADc,EAEtBC,QAFsB,CAEb,CAFa,EAEV,GAFU,CAAzB;AAIA,WAAQ,GAAEP,MAAO,GAAEI,gBAAiB,IAAGI,gBAAiB,EAAxD;AACD;;AAED,QAAMC,cAAc,GAAGR,IAAI,CAACI,KAAL,CAAWb,IAAI,GAAG,IAAlB,EACpBc,OADoB,CACZ,CADY,EAEpBC,QAFoB,CAEX,CAFW,EAER,GAFQ,CAAvB;AAGA,QAAMH,gBAAgB,GAAG,CAACH,IAAI,CAACI,KAAL,CAAWb,IAAI,GAAG,EAAlB,IAAwB,EAAzB,EACtBc,OADsB,CACd,CADc,EAEtBC,QAFsB,CAEb,CAFa,EAEV,GAFU,CAAzB;AAGA,QAAMC,gBAAgB,GAAGP,IAAI,CAACI,KAAL,CAAWb,IAAI,GAAG,EAAlB,EACtBc,OADsB,CACd,CADc,EAEtBC,QAFsB,CAEb,CAFa,EAEV,GAFU,CAAzB;AAIA,SAAQ,GAAEP,MAAO,GAAES,cAAe,IAAGL,gBAAiB,IAAGI,gBAAiB,EAA1E;AACD,CA/BD","sourcesContent":["// import padStart from 'lodash/padStart';\n\nexport const _onBack = (navigator: any) => {\n  if (navigator && navigator.pop) {\n    return () => navigator.pop();\n  }\n  return () =>\n    console.warn(\n      'Warning: _onBack requires navigator property to function. Either modify the onBack prop or pass a navigator prop',\n    );\n};\n\nexport const calculateTime = (args: FormatTime) => {\n  const {\n    time: currentTime = 0,\n    duration,\n    showTimeRemaining,\n    showDuration,\n  } = args;\n\n  const formattedDuration = !showDuration\n    ? ''\n    : `/${formatTime({\n        ...args,\n        time: duration,\n        showTimeRemaining: false,\n      })}`;\n\n  if (showTimeRemaining) {\n    const time = duration - currentTime;\n    return `${formatTime({...args, time})}${formattedDuration}`;\n  }\n\n  return `${formatTime({...args, time: currentTime})}${formattedDuration}`;\n};\n\ninterface FormatTime {\n  time?: number;\n  duration: number;\n  showDuration: boolean;\n  showTimeRemaining: boolean;\n  showHours: boolean;\n}\n\nconst formatTime = ({\n  time = 0,\n  duration,\n  showTimeRemaining,\n  showHours,\n}: FormatTime) => {\n  const symbol = showTimeRemaining ? '-' : '';\n  time = Math.min(Math.max(time, 0), duration);\n\n  if (!showHours) {\n    const formattedMinutes = Math.floor(time / 60)\n      .toFixed(0)\n      .padStart(2, '0');\n    const formattedSeconds = Math.floor(time % 60)\n      .toFixed(0)\n      .padStart(2, '0');\n\n    return `${symbol}${formattedMinutes}:${formattedSeconds}`;\n  }\n\n  const formattedHours = Math.floor(time / 3600)\n    .toFixed(0)\n    .padStart(2, '0');\n  const formattedMinutes = (Math.floor(time / 60) % 60)\n    .toFixed(0)\n    .padStart(2, '0');\n  const formattedSeconds = Math.floor(time % 60)\n    .toFixed(0)\n    .padStart(2, '0');\n\n  return `${symbol}${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n};\n"]}