{"version":3,"sources":["Seekbar.tsx"],"names":["Seekbar","seekColor","seekerFillWidth","seekerPosition","seekerPanHandlers","setSeekerWidth","styles","container","track","event","nativeEvent","layout","width","fill","backgroundColor","handle","left","circle"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;AAUO,MAAMA,OAAO,GAAG,QAMH;AAAA,MANI;AACtBC,IAAAA,SADsB;AAEtBC,IAAAA,eAFsB;AAGtBC,IAAAA,cAHsB;AAItBC,IAAAA,iBAJsB;AAKtBC,IAAAA;AALsB,GAMJ;AAClB,sBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,eAAOC,SAApB;AAA+B,IAAA,WAAW,EAAE;AAA5C,KAAuDH,iBAAvD,gBACE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAEE,eAAOE,KADhB;AAEE,IAAA,QAAQ,EAAGC,KAAD,IAAWJ,cAAc,CAACI,KAAK,CAACC,WAAN,CAAkBC,MAAlB,CAAyBC,KAA1B,CAFrC;AAGE,IAAA,aAAa,EAAE;AAHjB,kBAIE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLN,eAAOO,IADF,EAEL;AACED,MAAAA,KAAK,EAAEV,eADT;AAEEY,MAAAA,eAAe,EAAEb,SAAS,IAAI;AAFhC,KAFK,CADT;AAQE,IAAA,aAAa,EAAE;AARjB,IAJF,CADF,eAgBE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CAACK,eAAOS,MAAR,EAAgB;AAACC,MAAAA,IAAI,EAAEb;AAAP,KAAhB,CADT;AAEE,IAAA,aAAa,EAAE;AAFjB,kBAGE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CAACG,eAAOW,MAAR,EAAgB;AAACH,MAAAA,eAAe,EAAEb,SAAS,IAAI;AAA/B,KAAhB,CADT;AAEE,IAAA,aAAa,EAAE;AAFjB,IAHF,CAhBF,CADF;AA2BD,CAlCM","sourcesContent":["import React, {Dispatch, SetStateAction} from 'react';\nimport {View, GestureResponderHandlers} from 'react-native';\nimport {styles} from './styles';\n\ninterface SeekbarProps {\n  seekerFillWidth: number;\n  seekerPosition: number;\n  seekColor: string;\n  seekerPanHandlers: GestureResponderHandlers;\n  setSeekerWidth: Dispatch<SetStateAction<number>>;\n}\n\nexport const Seekbar = ({\n  seekColor,\n  seekerFillWidth,\n  seekerPosition,\n  seekerPanHandlers,\n  setSeekerWidth,\n}: SeekbarProps) => {\n  return (\n    <View style={styles.container} collapsable={false} {...seekerPanHandlers}>\n      <View\n        style={styles.track}\n        onLayout={(event) => setSeekerWidth(event.nativeEvent.layout.width)}\n        pointerEvents={'none'}>\n        <View\n          style={[\n            styles.fill,\n            {\n              width: seekerFillWidth,\n              backgroundColor: seekColor || '#FFF',\n            },\n          ]}\n          pointerEvents={'none'}\n        />\n      </View>\n      <View\n        style={[styles.handle, {left: seekerPosition}]}\n        pointerEvents={'none'}>\n        <View\n          style={[styles.circle, {backgroundColor: seekColor || '#FFF'}]}\n          pointerEvents={'none'}\n        />\n      </View>\n    </View>\n  );\n};\n"]}