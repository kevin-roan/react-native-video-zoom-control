{"version":3,"sources":["TopControls.tsx"],"names":["TopControls","showControls","panHandlers","animations","AnimatedView","controlsOpacity","topControl","disableBack","disableVolume","volumeFillWidth","volumePosition","volumeTrackWidth","onBack","resetControlTimeout","backControl","volumeControl","_styles","top","require","styles","column","vignette","topControlGroup","pullRight","StyleSheet","create","flexDirection","alignItems","justifyContent","flex","alignSelf","margin","marginBottom"],"mappings":";;;;;;;AAAA;;AACA;;AAOA;;AACA;;AACA;;AACA;;;;;;AAgBO,MAAMA,WAAW,gBAAG,iBACzB,QAWuB;AAAA,MAXtB;AACCC,IAAAA,YADD;AAECC,IAAAA,WAFD;AAGCC,IAAAA,UAAU,EAAE;AAACC,MAAAA,YAAD;AAAeC,MAAAA,eAAf;AAAgCC,MAAAA;AAAhC,KAHb;AAICC,IAAAA,WAJD;AAKCC,IAAAA,aALD;AAMCC,IAAAA,eAND;AAOCC,IAAAA,cAPD;AAQCC,IAAAA,gBARD;AASCC,IAAAA,MATD;AAUCC,IAAAA;AAVD,GAWsB;AACrB,QAAMC,WAAW,GAAGP,WAAW,gBAC7B,6BAAC,wBAAD,OAD6B,gBAG7B,6BAAC,UAAD;AACE,IAAA,YAAY,EAAEN,YADhB;AAEE,IAAA,MAAM,EAAEW,MAFV;AAGE,IAAA,mBAAmB,EAAEC;AAHvB,IAHF;AAUA,QAAME,aAAa,GAAGP,aAAa,gBACjC,6BAAC,wBAAD,OADiC,gBAGjC,6BAAC,cAAD;AACE,IAAA,eAAe,EAAEC,eADnB;AAEE,IAAA,gBAAgB,EAAEE,gBAFpB;AAGE,IAAA,cAAc,EAAED,cAHlB;AAIE,IAAA,iBAAiB,EAAER;AAJrB,IAHF;AAWA,sBACE,6BAAC,YAAD;AAAc,IAAA,KAAK,EAAE,CAACc,OAAO,CAACC,GAAT,EAAcZ,eAAd,EAA+BC,UAA/B;AAArB,kBACE,6BAAC,4BAAD;AACE,IAAA,MAAM,EAAEY,OAAO,CAAC,gCAAD,CADjB;AAEE,IAAA,KAAK,EAAE,CAACC,gBAAOC,MAAR,CAFT;AAGE,IAAA,UAAU,EAAE,CAACD,gBAAOE,QAAR;AAHd,kBAIE,6BAAC,yBAAD;AAAc,IAAA,KAAK,EAAEL,OAAO,CAACM;AAA7B,KACGR,WADH,eAEE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEE,OAAO,CAACO;AAArB,KAAiCR,aAAjC,CAFF,CAJF,CADF,CADF;AAaD,CA/CwB,CAApB;;;AAkDP,MAAMC,OAAO,GAAGQ,wBAAWC,MAAX,CAAkB;AAChCF,EAAAA,SAAS,EAAE;AACTG,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADqB;AAMhCX,EAAAA,GAAG,EAAE;AACHY,IAAAA,IAAI,EAAE,CADH;AAEHF,IAAAA,UAAU,EAAE,SAFT;AAGHC,IAAAA,cAAc,EAAE;AAHb,GAN2B;AAWhCN,EAAAA,eAAe,EAAE;AACfQ,IAAAA,SAAS,EAAE,SADI;AAEfH,IAAAA,UAAU,EAAE,QAFG;AAGfC,IAAAA,cAAc,EAAE,eAHD;AAIfF,IAAAA,aAAa,EAAE,KAJA;AAKfK,IAAAA,MAAM,EAAE,EALO;AAMfC,IAAAA,YAAY,EAAE;AANC;AAXe,CAAlB,CAAhB","sourcesContent":["import React, {memo} from 'react';\nimport {\n  ImageBackground,\n  SafeAreaView,\n  StyleSheet,\n  View,\n  GestureResponderHandlers,\n} from 'react-native';\nimport {Volume} from './Volume';\nimport {Back} from './Back';\nimport {NullControl} from './NullControl';\nimport {styles} from './styles';\nimport type {VideoAnimations} from '../types';\n\ninterface TopControlProps {\n  showControls: boolean;\n  panHandlers: GestureResponderHandlers;\n  animations: VideoAnimations;\n  disableBack: boolean;\n  disableVolume: boolean;\n  volumeFillWidth: number;\n  volumeTrackWidth: number;\n  volumePosition: number;\n  onBack: () => void;\n  resetControlTimeout: () => void;\n}\n\nexport const TopControls = memo(\n  ({\n    showControls,\n    panHandlers,\n    animations: {AnimatedView, controlsOpacity, topControl},\n    disableBack,\n    disableVolume,\n    volumeFillWidth,\n    volumePosition,\n    volumeTrackWidth,\n    onBack,\n    resetControlTimeout,\n  }: TopControlProps) => {\n    const backControl = disableBack ? (\n      <NullControl />\n    ) : (\n      <Back\n        showControls={showControls}\n        onBack={onBack}\n        resetControlTimeout={resetControlTimeout}\n      />\n    );\n\n    const volumeControl = disableVolume ? (\n      <NullControl />\n    ) : (\n      <Volume\n        volumeFillWidth={volumeFillWidth}\n        volumeTrackWidth={volumeTrackWidth}\n        volumePosition={volumePosition}\n        volumePanHandlers={panHandlers}\n      />\n    );\n\n    return (\n      <AnimatedView style={[_styles.top, controlsOpacity, topControl]}>\n        <ImageBackground\n          source={require('../assets/img/top-vignette.png')}\n          style={[styles.column]}\n          imageStyle={[styles.vignette]}>\n          <SafeAreaView style={_styles.topControlGroup}>\n            {backControl}\n            <View style={_styles.pullRight}>{volumeControl}</View>\n          </SafeAreaView>\n        </ImageBackground>\n      </AnimatedView>\n    );\n  },\n);\n\nconst _styles = StyleSheet.create({\n  pullRight: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  top: {\n    flex: 1,\n    alignItems: 'stretch',\n    justifyContent: 'flex-start',\n  },\n  topControlGroup: {\n    alignSelf: 'stretch',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    margin: 12,\n    marginBottom: 18,\n  },\n});\n"]}