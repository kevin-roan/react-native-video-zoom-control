{"version":3,"sources":["BottomControls.tsx"],"names":["BottomControls","showControls","animations","AnimatedView","panHandlers","disableSeekbar","disableTimer","duration","seekColor","showDuration","showHours","showTimeRemaining","currentTime","title","toggleTimer","resetControlTimeout","seekerFillWidth","seekerPosition","setSeekerWidth","isFullscreen","disableFullscreen","toggleFullscreen","timerControl","time","seekbarControl","fullscreenControl","_styles","bottom","controlsOpacity","bottomControl","require","styles","column","vignette","row","bottomControlGroup","seekBarContainer","StyleSheet","create","alignItems","flex","justifyContent","alignSelf","marginLeft","marginRight","marginBottom"],"mappings":"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","sourcesContent":["import React, {Dispatch, SetStateAction} from 'react';\nimport {\n  ImageBackground,\n  SafeAreaView,\n  StyleSheet,\n  GestureResponderHandlers,\n} from 'react-native';\nimport {Timer} from './Timer';\nimport {Title} from './Title';\nimport {NullControl} from './NullControl';\nimport {Fullscreen} from './Fullscreen';\nimport {Seekbar} from './Seekbar';\nimport {calculateTime} from '../utils';\nimport type {VideoAnimations} from '../types';\nimport {styles} from './styles';\n\ninterface BottomControlsProps {\n  showControls: boolean;\n  animations: VideoAnimations;\n  panHandlers: GestureResponderHandlers;\n  disableTimer: boolean;\n  disableSeekbar: boolean;\n  showDuration: boolean;\n  showHours: boolean;\n  paused: boolean;\n  showTimeRemaining: boolean;\n  currentTime: number;\n  duration: number;\n  seekColor: string;\n  title: string;\n  toggleTimer: () => void;\n  resetControlTimeout: () => void;\n  seekerFillWidth: number;\n  seekerPosition: number;\n  setSeekerWidth: Dispatch<SetStateAction<number>>;\n  isFullscreen: boolean;\n  disableFullscreen: boolean;\n  toggleFullscreen: () => void;\n}\n\nexport const BottomControls = ({\n  showControls,\n  animations: {AnimatedView, ...animations},\n  panHandlers,\n  disableSeekbar,\n  disableTimer,\n  duration,\n  seekColor,\n  showDuration,\n  showHours,\n  showTimeRemaining,\n  currentTime,\n  title,\n  toggleTimer,\n  resetControlTimeout,\n  seekerFillWidth,\n  seekerPosition,\n  setSeekerWidth,\n  isFullscreen,\n  disableFullscreen,\n  toggleFullscreen,\n}: BottomControlsProps) => {\n  const timerControl = disableTimer ? (\n    <NullControl />\n  ) : (\n    <Timer\n      resetControlTimeout={resetControlTimeout}\n      toggleTimer={toggleTimer}\n      showControls={showControls}>\n      {calculateTime({\n        showDuration,\n        showHours,\n        showTimeRemaining,\n        time: currentTime,\n        duration,\n      })}\n    </Timer>\n  );\n\n  const seekbarControl = disableSeekbar ? (\n    <NullControl />\n  ) : (\n    <Seekbar\n      seekerFillWidth={seekerFillWidth}\n      seekerPosition={seekerPosition}\n      seekColor={seekColor}\n      seekerPanHandlers={panHandlers}\n      setSeekerWidth={setSeekerWidth}\n    />\n  );\n\n  const fullscreenControl = disableFullscreen ? (\n    <NullControl />\n  ) : (\n    <Fullscreen\n      isFullscreen={isFullscreen}\n      toggleFullscreen={toggleFullscreen}\n      resetControlTimeout={resetControlTimeout}\n      showControls={showControls}\n    />\n  );\n\n  return (\n    <AnimatedView\n      style={[\n        _styles.bottom,\n        animations.controlsOpacity,\n        animations.bottomControl,\n      ]}>\n      <ImageBackground\n        source={require('../assets/img/bottom-vignette.png')}\n        style={[styles.column]}\n        imageStyle={[styles.vignette]}>\n        <SafeAreaView style={[styles.row, _styles.bottomControlGroup]}>\n          {timerControl}\n          <Title title={title} />\n          {fullscreenControl}\n        </SafeAreaView>\n        <SafeAreaView style={styles.seekBarContainer}>\n          {seekbarControl}\n        </SafeAreaView>\n      </ImageBackground>\n    </AnimatedView>\n  );\n};\n\nconst _styles = StyleSheet.create({\n  bottom: {\n    alignItems: 'stretch',\n    flex: 2,\n    justifyContent: 'flex-end',\n  },\n  bottomControlGroup: {\n    alignSelf: 'stretch',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginLeft: 12,\n    marginRight: 12,\n    marginBottom: 0,\n  },\n});\n"]}