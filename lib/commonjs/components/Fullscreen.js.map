{"version":3,"sources":["Fullscreen.tsx"],"names":["Fullscreen","isFullscreen","toggleFullscreen","resetControlTimeout","showControls","source","require","styles","fullscreen","StyleSheet","create","flexDirection"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AASO,MAAMA,UAAU,GAAG,QAKH;AAAA,MALI;AACzBC,IAAAA,YADyB;AAEzBC,IAAAA,gBAFyB;AAGzBC,IAAAA,mBAHyB;AAIzBC,IAAAA;AAJyB,GAKJ;AACrB,MAAIC,MAAM,GAAGJ,YAAY,GACrBK,OAAO,CAAC,0BAAD,CADc,GAErBA,OAAO,CAAC,0BAAD,CAFX;AAGA,sBACE,6BAAC,gBAAD;AACE,IAAA,QAAQ,EAAEJ,gBADZ;AAEE,IAAA,mBAAmB,EAAEC,mBAFvB;AAGE,IAAA,KAAK,EAAEI,MAAM,CAACC,UAHhB;AAIE,IAAA,QAAQ,EAAE,CAACJ;AAJb,kBAKE,6BAAC,kBAAD;AAAO,IAAA,MAAM,EAAEC;AAAf,IALF,CADF;AASD,CAlBM;;;;AAoBP,MAAME,MAAM,GAAGE,wBAAWC,MAAX,CAAkB;AAC/BF,EAAAA,UAAU,EAAE;AACVG,IAAAA,aAAa,EAAE;AADL;AADmB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport {Image, StyleSheet} from 'react-native';\nimport {Control} from './Control';\n\ninterface FullscreenProps {\n  isFullscreen: boolean;\n  toggleFullscreen: () => void;\n  resetControlTimeout: () => void;\n  showControls: boolean;\n}\n\nexport const Fullscreen = ({\n  isFullscreen,\n  toggleFullscreen,\n  resetControlTimeout,\n  showControls,\n}: FullscreenProps) => {\n  let source = isFullscreen\n    ? require('../assets/img/shrink.png')\n    : require('../assets/img/expand.png');\n  return (\n    <Control\n      callback={toggleFullscreen}\n      resetControlTimeout={resetControlTimeout}\n      style={styles.fullscreen}\n      disabled={!showControls}>\n      <Image source={source} />\n    </Control>\n  );\n};\n\nconst styles = StyleSheet.create({\n  fullscreen: {\n    flexDirection: 'row',\n  },\n});\n"]}